{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/app/api/auth/%5B...nextauth%5D/route.js"],"sourcesContent":["import NextAuth from \"next-auth\";\nimport GoogleProvider from \"next-auth/providers/google\";\nimport { PrismaAdapter } from \"@next-auth/prisma-adapter\";\nimport { PrismaClient } from \"@prisma/client\";\n\nconst prisma = new PrismaClient();\n\nconst handler = NextAuth({\n  adapter: PrismaAdapter(prisma),\n  providers: [\n    GoogleProvider({\n      clientId: process.env.GOOGLE_CLIENT_ID,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n    }),\n  ],\n  secret: process.env.NEXTAUTH_SECRET,\n  callbacks: {\n    async session({ session, user }) {\n      session.user.id = user.id;\n      const subscription = await prisma.subscription.findFirst({\n        where: { userId: user.id, endDate: null },\n      });\n      session.user.subscription = subscription;\n      return session;\n    },\n    async signIn({ user, account, profile }) {\n      return true;\n    },\n  },\n  pages: {\n    signIn: '/',\n  },\n});\n\nexport { handler as GET, handler as POST };"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;AAEA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;AAE/B,MAAM,UAAU,CAAA,GAAA,uIAAA,CAAA,UAAQ,AAAD,EAAE;IACvB,SAAS,CAAA,GAAA,sKAAA,CAAA,gBAAa,AAAD,EAAE;IACvB,WAAW;QACT,CAAA,GAAA,qJAAA,CAAA,UAAc,AAAD,EAAE;YACb,UAAU,QAAQ,GAAG,CAAC,gBAAgB;YACtC,cAAc,QAAQ,GAAG,CAAC,oBAAoB;QAChD;KACD;IACD,QAAQ,QAAQ,GAAG,CAAC,eAAe;IACnC,WAAW;QACT,MAAM,SAAQ,EAAE,OAAO,EAAE,IAAI,EAAE;YAC7B,QAAQ,IAAI,CAAC,EAAE,GAAG,KAAK,EAAE;YACzB,MAAM,eAAe,MAAM,OAAO,YAAY,CAAC,SAAS,CAAC;gBACvD,OAAO;oBAAE,QAAQ,KAAK,EAAE;oBAAE,SAAS;gBAAK;YAC1C;YACA,QAAQ,IAAI,CAAC,YAAY,GAAG;YAC5B,OAAO;QACT;QACA,MAAM,QAAO,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE;YACrC,OAAO;QACT;IACF;IACA,OAAO;QACL,QAAQ;IACV;AACF","debugId":null}}]
}